{"version":3,"file":"static/js/200.ee17617a.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilter = state => state.filter.value;\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const getFilteredContactsList = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from \"@emotion/styled\";\n\nexport const ContactsList = styled.ul`\nlist-style: none;\npadding: 0;\n`;\n\n\nexport const ContactsItem = styled.li`\nmargin: 0 0 15px 15px;\n\n`;\n\n\nexport const ContactsName = styled.p`\nfont-weight: 500;\nfont-size: 18px;\nfont-family: sans-serif;\n`;\n\n\nexport const DelContactBtn = styled.button`\n  width: 90px;\nheight: 30px;\nborder: none;\nborder-radius: 5px;\nbackground-color: #5F9EA0;\n&:hover{\nbackground-color: #008B8B;\ntransition: all 200ms cubic-bezier(0.4, 0, 0.3, 1);\n}\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport {\n  getFilteredContactsList,\n  selectContacts,\n  // selectIsLoading,\n  selectError,\n} from 'redux/contacts/selectors';\n\nimport {\n  ContactsList,\n  ContactsItem,\n  ContactsName,\n  DelContactBtn,\n} from './ContactList.styled';\n\nfunction ContactList() {\n  const distpatch = useDispatch();\n  const filteredContacts = useSelector(getFilteredContactsList);\n  const contacts = useSelector(selectContacts);\n  // const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  return (\n    <>\n      {/* {isLoading && !error && <b>Request in progress...</b>} */}\n      {error && <span>{error.message}</span>}\n      {\n        <ContactsList>\n          {contacts &&\n            filteredContacts.map(({ id, name, number }) => (\n              <ContactsItem key={id}>\n                <ContactsName>\n                  {name}: {number}\n                </ContactsName>\n                <DelContactBtn\n                  type=\"button\"\n                  onClick={() => distpatch(deleteContact(id))}\n                >\n                  Delete\n                </DelContactBtn>\n              </ContactsItem>\n            ))}\n        </ContactsList>\n      }\n    </>\n  );\n}\n\nexport default ContactList;\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.array.isRequired,\n//   onDelContact: PropTypes.func.isRequired,\n// };\n","import styled from \"@emotion/styled\";\n\n\nexport const Form = styled.form`\nwidth: 600px;\ndisplay: flex;\nflex-direction: column;\n\n`;\n\nexport const FormLabel = styled.label`\nfont-family: sans-serif;\nfont-size: 25px;\n\n`;\n\n\nexport const FormInput = styled.input`\ndisplay: block;\nwidth: 300px;\nheight: 30px;\nmargin-bottom: 20px;\nmargin-top: 20px;\nborder: 1px solid #bdbdbd;\nborder-radius: 5px;\nbackground-color: #ccc;\ntransition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n&:focus{\n  color: #212529;\n  background-color: #fff;\n  border-color: #bdbdbd;\n  outline: 0;\n}\n`;\n\n\nexport const AddButton = styled.button`\nwidth: 90px;\nheight: 30px;\nborder: none;\nborder-radius: 5px;\nbackground-color: #5F9EA0;\n&:hover{\nbackground-color: #008B8B;\ntransition: all 200ms cubic-bezier(0.4, 0, 0.3, 1);\n}\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { Form, FormLabel, FormInput, AddButton } from './ContactForm.styled';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.target;\n    const addedContact = {\n      name: form.elements.name.value,\n      number: form.elements.number.value,\n    };\n\n    evt.target.reset();\n\n    const filterName = contacts.find(\n      contact => contact.name.toLowerCase() === addedContact.name.toLowerCase()\n    );\n\n    if (filterName) {\n      return toast.error(`${addedContact.name} is already in contacts.`, {\n        position: 'bottom-right',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'light',\n      });\n    }\n\n    dispatch(addContact(addedContact));\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <FormLabel>\n          Name\n          <FormInput\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </FormLabel>\n\n        <FormLabel>\n          Number\n          <FormInput\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </FormLabel>\n        <AddButton type=\"submit\">Add contact</AddButton>\n      </Form>\n    </>\n  );\n};\n\n// ContactForm.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// }\n\nexport default ContactForm;\n","import styled from \"@emotion/styled\";\n\n\nexport const FilterLabel = styled.label`\n\nfont-family: sans-serif;\nfont-size: 25px;\n`;\n\n\nexport const FilterInput = styled.input`\ndisplay: block;\nwidth: 300px;\nheight: 30px;\nmargin-bottom: 20px;\nmargin-top: 20px;\nborder: 1px solid #bdbdbd;\nborder-radius: 5px;\nbackground-color: #ccc;\ntransition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n&:focus{\n  color: #212529;\n  background-color: #fff;\n  border-color: #bdbdbd;\n  outline: 0;\n}\n`;\n","import { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/filterSlice';\n// import PropTypes from 'prop-types';\nimport { FilterLabel, FilterInput } from './Filter.styled';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n\n  const onChange = evt => {\n    dispatch(filterContacts(evt.target.value));\n  };\n\n  return (\n    <FilterLabel>\n      Find contacts by name\n      <FilterInput type=\"text\" name=\"filter\" onChange={onChange} />\n    </FilterLabel>\n  );\n}\n\nexport default Filter;\n\n// Filter.propTypes = {\n//   value: PropTypes.string.isRequired,\n//   onChange: PropTypes.func.isRequired,\n// };\n","import { useEffect } from 'react';\nimport { useDispatch} from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport ContactList from 'components/ContactList/ContactList';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/contacts/operations';\n// import { selectIsLoading } from 'redux/contacts/selectors';\n\nexport default function  ContactsPage(){\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n      }, [dispatch]);\n\n    return(\n        <>\n        <Helmet>\n            <title>Your contacts</title>\n        </Helmet>\n        <ContactForm/>\n        <Filter/>\n        <ContactList/>\n        </>\n    )\n}"],"names":["selectContacts","state","contacts","selectError","error","getFilteredContactsList","createSelector","filter","value","contact","name","toLowerCase","includes","ContactsList","styled","ContactsItem","ContactsName","DelContactBtn","distpatch","useDispatch","filteredContacts","useSelector","message","map","id","number","type","onClick","deleteContact","Form","FormLabel","FormInput","AddButton","dispatch","onSubmit","evt","preventDefault","form","target","addedContact","elements","reset","find","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","addContact","pattern","title","required","FilterLabel","FilterInput","onChange","filterContacts","ContactsPage","useEffect","fetchContacts","Helmet"],"sourceRoot":""}