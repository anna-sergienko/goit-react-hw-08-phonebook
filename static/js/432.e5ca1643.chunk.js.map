{"version":3,"file":"static/js/432.e5ca1643.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilter = state => state.filter.value;\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const getFilteredContactsList = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from \"@emotion/styled\";\n\nexport const ContactsList = styled.ul`\nlist-style: none;\npadding: 0;\n`;\n\n\nexport const ContactsItem = styled.li`\nmargin: 0 0 15px 15px;\n\n`;\n\n\nexport const ContactsName = styled.p`\nfont-weight: 500;\nfont-size: 18px;\nfont-family: \"Avenir Next LT W01 Bold\",sans-serif;\n`;\n\n\nexport const DelContactBtn = styled.button`\nbackground-color: transparent;\n  border: 1px solid #266DB6;\n  box-sizing: border-box;\n  color: #00132C;\n  font-family: \"Avenir Next LT W01 Bold\",sans-serif;\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 24px;\n  padding: 2px 8px;\n  position: relative;\n  text-decoration: none;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  &:hover{\nbackground-color: transparent;\n  cursor: pointer;\n  }\n&:before{\n    background-color: #D5EDF6;\n    content: \"\";\n    height: calc(100% + 3px);\n    position: absolute;\n    right: -7px;\n    top: -9px;\n    transition: background-color 300ms ease-in;\n    width: 100%;\n    z-index: -1;\n}\n&:hover:before {\n      background-color: #6DCFF6;\n    }\n}\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport {\n  getFilteredContactsList,\n  selectContacts,\n  // selectIsLoading,\n  selectError,\n} from 'redux/contacts/selectors';\n\nimport {\n  ContactsList,\n  ContactsItem,\n  ContactsName,\n  DelContactBtn,\n} from './ContactList.styled';\n\nfunction ContactList() {\n  const distpatch = useDispatch();\n  const filteredContacts = useSelector(getFilteredContactsList);\n  const contacts = useSelector(selectContacts);\n  // const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  return (\n    <>\n      {/* {isLoading && !error && <b>Request in progress...</b>} */}\n      {error && <span>{error.message}</span>}\n      {\n        <ContactsList>\n          {contacts &&\n            filteredContacts.map(({ id, name, number }) => (\n              <ContactsItem key={id}>\n                <ContactsName>\n                  {name}: {number}\n                </ContactsName>\n                <DelContactBtn\n                  type=\"button\"\n                  onClick={() => distpatch(deleteContact(id))}\n                >\n                  Delete\n                </DelContactBtn>\n              </ContactsItem>\n            ))}\n        </ContactsList>\n      }\n    </>\n  );\n}\n\nexport default ContactList;\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.array.isRequired,\n//   onDelContact: PropTypes.func.isRequired,\n// };\n","import styled from \"@emotion/styled\";\n\n\nexport const Form = styled.form`\nwidth: 320px;\nmargin-bottom: 20px;\n`;\n\nexport const FormLabel = styled.label`\ndisplay: flex;\nflex-direction: column;\nmargin-bottom: 16px;\nfont-size: 16px;\ncolor: #00132C;\nfont-family: \"Avenir Next LT W01 Bold\",sans-serif;\n`;\n\n\nexport const FormInput = styled.input`\nheight: 30px;\nborder: 2px solid #D5EDF6;\nborder-radius: 5px;\n`;\n\n\nexport const AddButton = styled.button`\nbackground-color: transparent;\nborder: 1px solid #266DB6;\nbox-sizing: border-box;\ncolor: #00132C;\nfont-family: \"Avenir Next LT W01 Bold\",sans-serif;\nfont-size: 16px;\nfont-weight: 700;\nline-height: 24px;\npadding: 2px 8px;\nposition: relative;\ntext-decoration: none;\nuser-select: none;\n-webkit-user-select: none;\ntouch-action: manipulation;\n&:hover{\nbackground-color: transparent;\ncursor: pointer;\n}\n&:before{\n  background-color: #D5EDF6;\n  content: \"\";\n  height: calc(100% + 3px);\n  position: absolute;\n  right: -7px;\n  top: -9px;\n  transition: background-color 300ms ease-in;\n  width: 100%;\n  z-index: -1;\n}\n&:hover:before {\n    background-color: #6DCFF6;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { Form, FormLabel, FormInput, AddButton } from './ContactForm.styled';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.target;\n    const addedContact = {\n      name: form.elements.name.value,\n      number: form.elements.number.value,\n    };\n\n    evt.target.reset();\n\n    const filterName = contacts.find(\n      contact => contact.name.toLowerCase() === addedContact.name.toLowerCase()\n    );\n\n    if (filterName) {\n      return toast.error(`${addedContact.name} is already in contacts.`, {\n        position: 'bottom-right',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'light',\n      });\n    }\n\n    dispatch(addContact(addedContact));\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <FormLabel>\n          Name\n          <FormInput\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </FormLabel>\n\n        <FormLabel>\n          Number\n          <FormInput\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </FormLabel>\n        <AddButton type=\"submit\">Add contact</AddButton>\n      </Form>\n    </>\n  );\n};\n\n// ContactForm.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// }\n\nexport default ContactForm;\n","import styled from \"@emotion/styled\";\n\n\nexport const FilterLabel = styled.label`\ndisplay: flex;\nflex-direction: column;\nmargin-bottom: 16px;\nfont-size: 16px;\ncolor: #00132C;\nfont-family: \"Avenir Next LT W01 Bold\",sans-serif;\n`;\n\n\nexport const FilterInput = styled.input`\nheight: 30px;\nborder: 2px solid #D5EDF6;\nborder-radius: 5px;\n`;\n\nexport const FilterWrapper = styled.div`\nwidth: 320px;\n`\n","import { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/filterSlice';\n// import PropTypes from 'prop-types';\nimport { FilterLabel, FilterInput, FilterWrapper } from './Filter.styled';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n\n  const onChange = evt => {\n    dispatch(filterContacts(evt.target.value));\n  };\n\n  return (\n    <FilterWrapper>\n       <FilterLabel>\n      Find contacts by name\n      <FilterInput type=\"text\" name=\"filter\" onChange={onChange} />\n    </FilterLabel>\n    </FilterWrapper>\n   \n  );\n}\n\nexport default Filter;\n\n// Filter.propTypes = {\n//   value: PropTypes.string.isRequired,\n//   onChange: PropTypes.func.isRequired,\n// };\n","import { useEffect } from 'react';\nimport { useDispatch} from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport ContactList from 'components/ContactList/ContactList';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/contacts/operations';\n// import { selectIsLoading } from 'redux/contacts/selectors';\n\nexport default function  ContactsPage(){\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n      }, [dispatch]);\n\n    return(\n        <>\n        <Helmet>\n            <title>Your contacts</title>\n        </Helmet>\n        <ContactForm/>\n        <Filter/>\n        <ContactList/>\n        </>\n    )\n}"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","selectError","error","getFilteredContactsList","filter","contact","toLowerCase","includes","ContactsList","styled","ContactsItem","ContactsName","DelContactBtn","distpatch","useDispatch","filteredContacts","useSelector","message","id","number","type","onClick","deleteContact","Form","FormLabel","FormInput","AddButton","dispatch","onSubmit","evt","preventDefault","form","target","addedContact","elements","reset","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","theme","addContact","pattern","title","required","FilterLabel","FilterInput","FilterWrapper","onChange","filterContacts","ContactsPage","useEffect","fetchContacts","Helmet"],"sourceRoot":""}